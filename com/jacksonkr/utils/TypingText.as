package com.jacksonkr.utils {	import flash.events.EventDispatcher;	import flash.text.TextField;	import flash.utils.setTimeout;	import flash.utils.setInterval;	import flash.events.Event;	import flash.utils.clearInterval;	public class TypingText extends EventDispatcher {		private var _anim_interval:int;				public var text_end:String;		public var field:TextField;		public var options:Object;		public var original_text:String;				public function TypingText(obj:TextField, options:Object):void {			this.field = obj;			this.original_text = this.field.text;			this.options = options;						if(this.options.append_count > 0) {				this.field.text = '';				this.field.visible = false;			}						if(this.options.delay) setTimeout(this.start, this.options.delay * 1000);			else this.start();		}				private function addLetter():void {			var txt:String = this.original_text.substr(0, this.field.text.length + this.options.append_count);			this.field.text = txt;						if(this.options.appendCount > 0) {				if(this.field.text.length == this.original_text.length) clearInterval(this._anim_interval);				dispatchEvent(new Event(Event.COMPLETE));			} else {				if(this.field.text.length == 0) clearInterval(this._anim_interval);				dispatchEvent(new Event(Event.COMPLETE));			}		}		private function start():void {			this.field.visible = true;						var chars:int = this.original_text.length;			var interval_speed:Number = this.options.time / (chars / Math.abs(this.options.append_count));						this._anim_interval = setInterval(this.addLetter, interval_speed * 1000);		}				public static function animate(obj:TextField, options:Object):void {			if(!options.time) throw new Error("Missing required option of time. e.g. time:1.0");						if(!options.append_count) options.append_count = 1;			else if(!(options.append_count is int)) throw new Error("Option append_count must be of the type int.");			else if(options.append_count == 0) throw new Error("Option append_count cannot be equal to zero. It must be a positive or negative int.");						var tt:TypingText = new TypingText(obj, options);		}	}}